{"ast":null,"code":"var _jsxFileName = \"D:\\\\SpringProjects\\\\TourPlanner\\\\src\\\\main\\\\webapp\\\\frontend\\\\src\\\\components\\\\packages\\\\BookingForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingForm = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the tour ID from the URL\n  const history = useHistory();\n  const [tour, setTour] = useState(null);\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [numberOfPeople, setNumberOfPeople] = useState(1);\n  const [bookingDate, setBookingDate] = useState('');\n\n  // Fetch tour data based on the ID\n  useEffect(() => {\n    Axios.get(`http://localhost:8093/tours-api/tours/${id}`).then(response => {\n      setTour(response.data); // Store tour data when it's fetched\n    }).catch(error => {\n      Swal.fire({\n        title: 'Error!',\n        text: 'Unable to fetch tour data.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    });\n  }, [id]); // Re-fetch when the ID changes\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Create booking object\n    const booking = {\n      tourId: id,\n      tourTitle: tour.title,\n      fullName,\n      email,\n      numberOfPeople,\n      bookingDate\n    };\n    try {\n      // Send booking data to the backend\n      const response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\n      if (response.status === 200) {\n        Swal.fire({\n          title: 'Booking Successful!',\n          text: 'Your booking has been confirmed!',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        }).then(() => {\n          history.push('/'); // Redirect to the home page after successful booking\n        });\n      }\n    } catch (error) {\n      Swal.fire({\n        title: 'Booking Failed!',\n        text: 'Please try again later.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  };\n  if (!tour) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tour data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }, this); // Show loading while tour data is being fetched\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Book Your Tour: \", tour.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          value: numberOfPeople,\n          onChange: e => setNumberOfPeople(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Booking Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: bookingDate,\n          onChange: e => setBookingDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Confirm Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n_s(BookingForm, \"5Ik7Le0s6wsCB0ru/iOSjtQCOBI=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = BookingForm;\nexport default BookingForm;\n{/*import React, { useState, useEffect } from \"react\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import Axios from \"axios\";\r\n import Swal from \"sweetalert2\";\r\n \n const BookingForm = () => {\r\n    const { tourId } = useParams(); // Get tourId from the URL\r\n    const history = useHistory(); // Hook for navigation\r\n \n    const [tour, setTour] = useState(null);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n    const [bookingDate, setBookingDate] = useState(\"\");\r\n \n    useEffect(() => {\r\n        Axios.get(`http://localhost:8093/tours-api/tours/${tourId}`)\r\n            .then(response => setTour(response.data))\r\n            .catch(error => console.error(\"Error fetching tour details\", error));\r\n    }, [tourId]);\r\n \n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n \n        // Basic validations\r\n        if (numberOfPeople < 1) {\r\n            Swal.fire(\"Invalid Input\", \"Number of people must be at least 1!\", \"warning\");\r\n            return;\r\n        }\r\n        if (new Date(bookingDate) < new Date()) {\r\n            Swal.fire(\"Invalid Date\", \"Please select a future date!\", \"warning\");\r\n            return;\r\n        }\r\n \n        const booking = { tourId, fullName, email, numberOfPeople, bookingDate };\r\n \n        try {\r\n            const response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n            if (response.status === 200 || response.status === 201) {\r\n                Swal.fire(\"Booking Successful!\", \"Your booking has been confirmed!\", \"success\")\r\n                    .then(() => history.push(\"/\")); // Redirect to home page\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Booking Failed!\", \"Please try again later.\", \"error\");\r\n        }\r\n    };\r\n \n    return (\r\n        <div className=\"booking-form\">\r\n            <h2>Book Your Tour</h2>\r\n            {tour ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Full Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\r\n                    </div>\r\n \n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                    </div>\r\n \n                    <div className=\"form-group\">\r\n                        <label>Number of People</label>\r\n                        <input type=\"number\" className=\"form-control\" value={numberOfPeople} onChange={(e) => setNumberOfPeople(parseInt(e.target.value, 10) || 1)} min=\"1\" required />\r\n                    </div>\r\n \n                    <div className=\"form-group\">\r\n                        <label>Booking Date</label>\r\n                        <input type=\"date\" className=\"form-control\" value={bookingDate} onChange={(e) => setBookingDate(e.target.value)} required />\r\n                    </div>\r\n \n                    <button type=\"submit\" className=\"btn btn-primary\">Confirm Booking</button>\r\n                </form>\r\n            ) : (\r\n                <p>Loading tour details...</p>\r\n            )}\r\n        </div>\r\n    );\r\n };\r\n \n export default BookingForm;*/}\n{/*import React, { useState } from 'react';\r\n import Axios from 'axios';\r\n import Swal from 'sweetalert2';\r\n \n const BookingForm = ({ tourId, tourTitle, price }) => {\r\n const [fullName, setFullName] = useState('');\r\n const [email, setEmail] = useState('');\r\n const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n const [bookingDate, setBookingDate] = useState('');\r\n \n \n const handleSubmit = async (event) => {\r\n \tevent.preventDefault();\r\n \t// Create booking object\r\n \tconst booking = {\r\n \t\ttourId,\r\n \t\ttourTitle,\r\n \t\tfullName,\r\n \t\temail,\r\n \t\tnumberOfPeople,\r\n \t\tbookingDate\r\n \t};\r\n \n \ttry {\r\n \t\t// Send booking data to the backend\r\n \t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n \t\tif (response.status === 200) {\r\n \t\t\tSwal.fire({\r\n \t\t\t\ttitle: 'Booking Successful!',\r\n \t\t\t\ttext: 'Your booking has been confirmed!',\r\n \t\t\t\ticon: 'success',\r\n \t\t\t\tconfirmButtonText: 'OK',\r\n \t\t\t});\r\n \t\t}\r\n \t} catch (error) {\r\n \t\tSwal.fire({\r\n \t\t\ttitle: 'Booking Failed!',\r\n \t\t\ttext: 'Please try again later.',\r\n \t\t\ticon: 'error',\r\n \t\t\tconfirmButtonText: 'OK',\r\n \t\t});\r\n \t}\r\n };\r\n \n return (\r\n \t<div className=\"booking-form\">\r\n \t\t<h2>Book Your Tour: {tourTitle}</h2>\r\n \t\t<form onSubmit={handleSubmit}>\r\n \t\t\t<div className=\"form-group\">\r\n \t\t\t\t<label>Full Name</label>\r\n \t\t\t\t<input\r\n \t\t\t\t\ttype=\"text\"\r\n \t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\tvalue={fullName}\r\n \t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n \t\t\t\t\trequired\r\n \t\t\t\t/>\r\n \t\t\t</div>\r\n \n \t\t\t<div className=\"form-group\">\r\n \t\t\t\t<label>Email</label>\r\n \t\t\t\t<input\r\n \t\t\t\t\ttype=\"email\"\r\n \t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\tvalue={email}\r\n \t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n \t\t\t\t\trequired\r\n \t\t\t\t/>\r\n \t\t\t</div>\r\n \n \t\t\t<div className=\"form-group\">\r\n \t\t\t\t<label>Number of People</label>\r\n \t\t\t\t<input\r\n \t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\tvalue={numberOfPeople}\r\n \t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n \t\t\t\t\trequired\r\n \t\t\t\t/>\r\n \t\t\t</div>\r\n \n \t\t\t<div className=\"form-group\">\r\n \t\t\t\t<label>Booking Date</label>\r\n \t\t\t\t<input\r\n \t\t\t\t\ttype=\"date\"\r\n \t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\tvalue={bookingDate}\r\n \t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n \t\t\t\t\trequired\r\n \t\t\t\t/>\r\n \t\t\t</div>\r\n \n \t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n \t\t\t\tConfirm Booking\r\n \t\t\t</button>\r\n \t\t</form>\r\n \t</div>\r\n );\r\n };\r\n \n export default BookingForm;*/}\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","useEffect","Axios","Swal","useParams","useHistory","jsxDEV","_jsxDEV","BookingForm","_s","id","history","tour","setTour","fullName","setFullName","email","setEmail","numberOfPeople","setNumberOfPeople","bookingDate","setBookingDate","get","then","response","data","catch","error","fire","title","text","icon","confirmButtonText","handleSubmit","event","preventDefault","booking","tourId","tourTitle","post","status","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["D:/SpringProjects/TourPlanner/src/main/webapp/frontend/src/components/packages/BookingForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst BookingForm = () => {\r\n\tconst { id } = useParams(); // Get the tour ID from the URL\r\n\tconst history = useHistory();\r\n\tconst [tour, setTour] = useState(null);\r\n\tconst [fullName, setFullName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [numberOfPeople, setNumberOfPeople] = useState(1);\r\n\tconst [bookingDate, setBookingDate] = useState('');\r\n\r\n\t// Fetch tour data based on the ID\r\n\tuseEffect(() => {\r\n\t\tAxios.get(`http://localhost:8093/tours-api/tours/${id}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetTour(response.data); // Store tour data when it's fetched\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Error!',\r\n\t\t\t\t\ttext: 'Unable to fetch tour data.',\r\n\t\t\t\t\ticon: 'error',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, [id]); // Re-fetch when the ID changes\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// Create booking object\r\n\t\tconst booking = {\r\n\t\t\ttourId: id,\r\n\t\t\ttourTitle: tour.title,\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tnumberOfPeople,\r\n\t\t\tbookingDate\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// Send booking data to the backend\r\n\t\t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Booking Successful!',\r\n\t\t\t\t\ttext: 'Your booking has been confirmed!',\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\thistory.push('/'); // Redirect to the home page after successful booking\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Booking Failed!',\r\n\t\t\t\ttext: 'Please try again later.',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tif (!tour) {\r\n\t\treturn <div>Loading tour data...</div>; // Show loading while tour data is being fetched\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"booking-form\">\r\n\t\t\t<h2>Book Your Tour: {tour.title}</h2>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Number of People</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={numberOfPeople}\r\n\t\t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Booking Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={bookingDate}\r\n\t\t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\tConfirm Booking\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BookingForm;\r\n\r\n\r\n\r\n\r\n{/*import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BookingForm = () => {\r\n    const { tourId } = useParams(); // Get tourId from the URL\r\n    const history = useHistory(); // Hook for navigation\r\n\r\n    const [tour, setTour] = useState(null);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n    const [bookingDate, setBookingDate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8093/tours-api/tours/${tourId}`)\r\n            .then(response => setTour(response.data))\r\n            .catch(error => console.error(\"Error fetching tour details\", error));\r\n    }, [tourId]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Basic validations\r\n        if (numberOfPeople < 1) {\r\n            Swal.fire(\"Invalid Input\", \"Number of people must be at least 1!\", \"warning\");\r\n            return;\r\n        }\r\n        if (new Date(bookingDate) < new Date()) {\r\n            Swal.fire(\"Invalid Date\", \"Please select a future date!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        const booking = { tourId, fullName, email, numberOfPeople, bookingDate };\r\n\r\n        try {\r\n            const response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n            if (response.status === 200 || response.status === 201) {\r\n                Swal.fire(\"Booking Successful!\", \"Your booking has been confirmed!\", \"success\")\r\n                    .then(() => history.push(\"/\")); // Redirect to home page\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Booking Failed!\", \"Please try again later.\", \"error\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"booking-form\">\r\n            <h2>Book Your Tour</h2>\r\n            {tour ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Full Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Number of People</label>\r\n                        <input type=\"number\" className=\"form-control\" value={numberOfPeople} onChange={(e) => setNumberOfPeople(parseInt(e.target.value, 10) || 1)} min=\"1\" required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Booking Date</label>\r\n                        <input type=\"date\" className=\"form-control\" value={bookingDate} onChange={(e) => setBookingDate(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Confirm Booking</button>\r\n                </form>\r\n            ) : (\r\n                <p>Loading tour details...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingForm;*/}\r\n\r\n\r\n\r\n\r\n\r\n{/*import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst BookingForm = ({ tourId, tourTitle, price }) => {\r\n\tconst [fullName, setFullName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [numberOfPeople, setNumberOfPeople] = useState(1);\r\n\tconst [bookingDate, setBookingDate] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// Create booking object\r\n\t\tconst booking = {\r\n\t\t\ttourId,\r\n\t\t\ttourTitle,\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tnumberOfPeople,\r\n\t\t\tbookingDate\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// Send booking data to the backend\r\n\t\t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Booking Successful!',\r\n\t\t\t\t\ttext: 'Your booking has been confirmed!',\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Booking Failed!',\r\n\t\t\t\ttext: 'Please try again later.',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"booking-form\">\r\n\t\t\t<h2>Book Your Tour: {tourTitle}</h2>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Number of People</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={numberOfPeople}\r\n\t\t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Booking Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={bookingDate}\r\n\t\t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\tConfirm Booking\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BookingForm;*/}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}