{"ast":null,"code":"var _jsxFileName = \"D:\\\\SpringProjects\\\\TourPlanner\\\\src\\\\main\\\\webapp\\\\frontend\\\\src\\\\components\\\\packages\\\\BookingForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { useParams, useHistory } from 'react-router-dom';\nconst BookingForm = () => {\n  const {\n    id\n  } = useParams(); // Get the tour ID from the URL\n  const history = useHistory();\n  const [tour, setTour] = useState(null);\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [numberOfPeople, setNumberOfPeople] = useState(1);\n  const [bookingDate, setBookingDate] = useState('');\n\n  // Fetch tour data based on the ID\n  useEffect(() => {\n    Axios.get(`http://localhost:8093/tours-api/tours/${id}`).then(response => {\n      setTour(response.data); // Store tour data when it's fetched\n    }).catch(error => {\n      Swal.fire({\n        title: 'Error!',\n        text: 'Unable to fetch tour data.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    });\n  }, [id]); // Re-fetch when the ID changes\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Create booking object\n    const booking = {\n      tourId: id,\n      tourTitle: tour.title,\n      fullName,\n      email,\n      numberOfPeople,\n      bookingDate\n    };\n    try {\n      // Send booking data to the backend\n      const response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\n      if (response.status === 200) {\n        Swal.fire({\n          title: 'Booking Successful!',\n          text: 'Your booking has been confirmed!',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        }).then(() => {\n          history.push('/'); // Redirect to the home page after successful booking\n        });\n      }\n    } catch (error) {\n      Swal.fire({\n        title: 'Booking Failed!',\n        text: 'Please try again later.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  };\n  if (!tour) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }\n    }, \"Loading tour data...\"); // Show loading while tour data is being fetched\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booking-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, \"Book Your Tour: \", tour.title), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: fullName,\n    onChange: e => setFullName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"Number of People\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    value: numberOfPeople,\n    onChange: e => setNumberOfPeople(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }\n  }, \"Booking Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    className: \"form-control\",\n    value: bookingDate,\n    onChange: e => setBookingDate(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, \"Confirm Booking\")));\n};\nexport default BookingForm;\n{/*import React, { useState, useEffect } from \"react\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import Axios from \"axios\";\r\n import Swal from \"sweetalert2\";\r\n \n const BookingForm = () => {\r\n    const { tourId } = useParams(); // Get tourId from the URL\r\n    const history = useHistory(); // Hook for navigation\r\n \n    const [tour, setTour] = useState(null);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n    const [bookingDate, setBookingDate] = useState(\"\");\r\n \n    useEffect(() => {\r\n        Axios.get(`http://localhost:8093/tours-api/tours/${tourId}`)\r\n            .then(response => setTour(response.data))\r\n            .catch(error => console.error(\"Error fetching tour details\", error));\r\n    }, [tourId]);\r\n \n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n \n        // Basic validations\r\n        if (numberOfPeople < 1) {\r\n            Swal.fire(\"Invalid Input\", \"Number of people must be at least 1!\", \"warning\");\r\n            return;\r\n        }\r\n        if (new Date(bookingDate) < new Date()) {\r\n            Swal.fire(\"Invalid Date\", \"Please select a future date!\", \"warning\");\r\n            return;\r\n        }\r\n \n        const booking = { tourId, fullName, email, numberOfPeople, bookingDate };\r\n \n        try {\r\n            const response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n            if (response.status === 200 || response.status === 201) {\r\n                Swal.fire(\"Booking Successful!\", \"Your booking has been confirmed!\", \"success\")\r\n                    .then(() => history.push(\"/\")); // Redirect to home page\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Booking Failed!\", \"Please try again later.\", \"error\");\r\n        }\r\n    };\r\n \n    return (\r\n        <div className=\"booking-form\">\r\n            <h2>Book Your Tour</h2>\r\n            {tour ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Full Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\r\n                    </div>\r\n \n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                    </div>\r\n \n                    <div className=\"form-group\">\r\n                        <label>Number of People</label>\r\n                        <input type=\"number\" className=\"form-control\" value={numberOfPeople} onChange={(e) => setNumberOfPeople(parseInt(e.target.value, 10) || 1)} min=\"1\" required />\r\n                    </div>\r\n \n                    <div className=\"form-group\">\r\n                        <label>Booking Date</label>\r\n                        <input type=\"date\" className=\"form-control\" value={bookingDate} onChange={(e) => setBookingDate(e.target.value)} required />\r\n                    </div>\r\n \n                    <button type=\"submit\" className=\"btn btn-primary\">Confirm Booking</button>\r\n                </form>\r\n            ) : (\r\n                <p>Loading tour details...</p>\r\n            )}\r\n        </div>\r\n    );\r\n };\r\n \n export default BookingForm;*/}\n{/*import React, { useState } from 'react';\r\n import Axios from 'axios';\r\n import Swal from 'sweetalert2';\r\n \n const BookingForm = ({ tourId, tourTitle, price }) => {\r\n const [fullName, setFullName] = useState('');\r\n const [email, setEmail] = useState('');\r\n const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n const [bookingDate, setBookingDate] = useState('');\r\n \n \n const handleSubmit = async (event) => {\r\n \tevent.preventDefault();\r\n \t// Create booking object\r\n \tconst booking = {\r\n \t\ttourId,\r\n \t\ttourTitle,\r\n \t\tfullName,\r\n \t\temail,\r\n \t\tnumberOfPeople,\r\n \t\tbookingDate\r\n \t};\r\n \n \ttry {\r\n \t\t// Send booking data to the backend\r\n \t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n \t\tif (response.status === 200) {\r\n \t\t\tSwal.fire({\r\n \t\t\t\ttitle: 'Booking Successful!',\r\n \t\t\t\ttext: 'Your booking has been confirmed!',\r\n \t\t\t\ticon: 'success',\r\n \t\t\t\tconfirmButtonText: 'OK',\r\n \t\t\t});\r\n \t\t}\r\n \t} catch (error) {\r\n \t\tSwal.fire({\r\n \t\t\ttitle: 'Booking Failed!',\r\n \t\t\ttext: 'Please try again later.',\r\n \t\t\ticon: 'error',\r\n \t\t\tconfirmButtonText: 'OK',\r\n \t\t});\r\n \t}\r\n };\r\n \n return (\r\n \t<div className=\"booking-form\">\r\n \t\t<h2>Book Your Tour: {tourTitle}</h2>\r\n \t\t<form onSubmit={handleSubmit}>\r\n \t\t\t<div className=\"form-group\">\r\n \t\t\t\t<label>Full Name</label>\r\n \t\t\t\t<input\r\n \t\t\t\t\ttype=\"text\"\r\n \t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\tvalue={fullName}\r\n \t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n \t\t\t\t\trequired\r\n \t\t\t\t/>\r\n \t\t\t</div>\r\n \n \t\t\t<div className=\"form-group\">\r\n \t\t\t\t<label>Email</label>\r\n \t\t\t\t<input\r\n \t\t\t\t\ttype=\"email\"\r\n \t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\tvalue={email}\r\n \t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n \t\t\t\t\trequired\r\n \t\t\t\t/>\r\n \t\t\t</div>\r\n \n \t\t\t<div className=\"form-group\">\r\n \t\t\t\t<label>Number of People</label>\r\n \t\t\t\t<input\r\n \t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\tvalue={numberOfPeople}\r\n \t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n \t\t\t\t\trequired\r\n \t\t\t\t/>\r\n \t\t\t</div>\r\n \n \t\t\t<div className=\"form-group\">\r\n \t\t\t\t<label>Booking Date</label>\r\n \t\t\t\t<input\r\n \t\t\t\t\ttype=\"date\"\r\n \t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\tvalue={bookingDate}\r\n \t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n \t\t\t\t\trequired\r\n \t\t\t\t/>\r\n \t\t\t</div>\r\n \n \t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n \t\t\t\tConfirm Booking\r\n \t\t\t</button>\r\n \t\t</form>\r\n \t</div>\r\n );\r\n };\r\n \n export default BookingForm;*/}","map":{"version":3,"names":["React","useState","useEffect","Axios","Swal","useParams","useHistory","BookingForm","id","history","tour","setTour","fullName","setFullName","email","setEmail","numberOfPeople","setNumberOfPeople","bookingDate","setBookingDate","get","then","response","data","catch","error","fire","title","text","icon","confirmButtonText","handleSubmit","event","preventDefault","booking","tourId","tourTitle","post","status","push","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","e","target","required"],"sources":["D:/SpringProjects/TourPlanner/src/main/webapp/frontend/src/components/packages/BookingForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst BookingForm = () => {\r\n\tconst { id } = useParams(); // Get the tour ID from the URL\r\n\tconst history = useHistory();\r\n\tconst [tour, setTour] = useState(null);\r\n\tconst [fullName, setFullName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [numberOfPeople, setNumberOfPeople] = useState(1);\r\n\tconst [bookingDate, setBookingDate] = useState('');\r\n\r\n\t// Fetch tour data based on the ID\r\n\tuseEffect(() => {\r\n\t\tAxios.get(`http://localhost:8093/tours-api/tours/${id}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetTour(response.data); // Store tour data when it's fetched\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Error!',\r\n\t\t\t\t\ttext: 'Unable to fetch tour data.',\r\n\t\t\t\t\ticon: 'error',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, [id]); // Re-fetch when the ID changes\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// Create booking object\r\n\t\tconst booking = {\r\n\t\t\ttourId: id,\r\n\t\t\ttourTitle: tour.title,\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tnumberOfPeople,\r\n\t\t\tbookingDate\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// Send booking data to the backend\r\n\t\t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Booking Successful!',\r\n\t\t\t\t\ttext: 'Your booking has been confirmed!',\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\thistory.push('/'); // Redirect to the home page after successful booking\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Booking Failed!',\r\n\t\t\t\ttext: 'Please try again later.',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tif (!tour) {\r\n\t\treturn <div>Loading tour data...</div>; // Show loading while tour data is being fetched\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"booking-form\">\r\n\t\t\t<h2>Book Your Tour: {tour.title}</h2>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Number of People</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={numberOfPeople}\r\n\t\t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Booking Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={bookingDate}\r\n\t\t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\tConfirm Booking\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BookingForm;\r\n\r\n\r\n\r\n\r\n{/*import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BookingForm = () => {\r\n    const { tourId } = useParams(); // Get tourId from the URL\r\n    const history = useHistory(); // Hook for navigation\r\n\r\n    const [tour, setTour] = useState(null);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n    const [bookingDate, setBookingDate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8093/tours-api/tours/${tourId}`)\r\n            .then(response => setTour(response.data))\r\n            .catch(error => console.error(\"Error fetching tour details\", error));\r\n    }, [tourId]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Basic validations\r\n        if (numberOfPeople < 1) {\r\n            Swal.fire(\"Invalid Input\", \"Number of people must be at least 1!\", \"warning\");\r\n            return;\r\n        }\r\n        if (new Date(bookingDate) < new Date()) {\r\n            Swal.fire(\"Invalid Date\", \"Please select a future date!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        const booking = { tourId, fullName, email, numberOfPeople, bookingDate };\r\n\r\n        try {\r\n            const response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n            if (response.status === 200 || response.status === 201) {\r\n                Swal.fire(\"Booking Successful!\", \"Your booking has been confirmed!\", \"success\")\r\n                    .then(() => history.push(\"/\")); // Redirect to home page\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Booking Failed!\", \"Please try again later.\", \"error\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"booking-form\">\r\n            <h2>Book Your Tour</h2>\r\n            {tour ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Full Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Number of People</label>\r\n                        <input type=\"number\" className=\"form-control\" value={numberOfPeople} onChange={(e) => setNumberOfPeople(parseInt(e.target.value, 10) || 1)} min=\"1\" required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Booking Date</label>\r\n                        <input type=\"date\" className=\"form-control\" value={bookingDate} onChange={(e) => setBookingDate(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Confirm Booking</button>\r\n                </form>\r\n            ) : (\r\n                <p>Loading tour details...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingForm;*/}\r\n\r\n\r\n\r\n\r\n\r\n{/*import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst BookingForm = ({ tourId, tourTitle, price }) => {\r\n\tconst [fullName, setFullName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [numberOfPeople, setNumberOfPeople] = useState(1);\r\n\tconst [bookingDate, setBookingDate] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// Create booking object\r\n\t\tconst booking = {\r\n\t\t\ttourId,\r\n\t\t\ttourTitle,\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tnumberOfPeople,\r\n\t\t\tbookingDate\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// Send booking data to the backend\r\n\t\t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Booking Successful!',\r\n\t\t\t\t\ttext: 'Your booking has been confirmed!',\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Booking Failed!',\r\n\t\t\t\ttext: 'Please try again later.',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"booking-form\">\r\n\t\t\t<h2>Book Your Tour: {tourTitle}</h2>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Number of People</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={numberOfPeople}\r\n\t\t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Booking Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={bookingDate}\r\n\t\t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\tConfirm Booking\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BookingForm;*/}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}