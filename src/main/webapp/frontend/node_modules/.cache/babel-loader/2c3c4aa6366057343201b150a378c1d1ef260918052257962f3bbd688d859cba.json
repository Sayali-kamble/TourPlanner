{"ast":null,"code":"import React,{useState,useEffect}from'react';import Axios from'axios';import Swal from'sweetalert2';import{useParams,useHistory}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BookingForm=()=>{const{id}=useParams();// Get the tour ID from the URL\nconst history=useHistory();const[tour,setTour]=useState(null);const[fullName,setFullName]=useState('');const[email,setEmail]=useState('');const[numberOfPeople,setNumberOfPeople]=useState(1);const[bookingDate,setBookingDate]=useState('');// Fetch tour data based on the ID\nuseEffect(()=>{Axios.get(`http://localhost:8093/tours-api/tours/${id}`).then(response=>{setTour(response.data);// Store tour data when it's fetched\n}).catch(error=>{Swal.fire({title:'Error!',text:'Unable to fetch tour data.',icon:'error',confirmButtonText:'OK'});});},[id]);// Re-fetch when the ID changes\nconst handleSubmit=async event=>{event.preventDefault();// Create booking object\nconst booking={tourId:id,tourTitle:tour.title,fullName,email,numberOfPeople,bookingDate};try{// Send booking data to the backend\nconst response=await Axios.post(\"http://localhost:8093/bookings/create\",booking);if(response.status===200){Swal.fire({title:'Booking Successful!',text:'Your booking has been confirmed!',icon:'success',confirmButtonText:'OK'}).then(()=>{history.push('/');// Redirect to the home page after successful booking\n});}}catch(error){Swal.fire({title:'Booking Failed!',text:'Please try again later.',icon:'error',confirmButtonText:'OK'});}};if(!tour){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading tour data...\"});// Show loading while tour data is being fetched\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"booking-form\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Book Your Tour: \",tour.title]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Full Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:fullName,onChange:e=>setFullName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Number of People\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",value:numberOfPeople,onChange:e=>setNumberOfPeople(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Booking Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control\",value:bookingDate,onChange:e=>setBookingDate(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Confirm Booking\"})]})]});};export default BookingForm;{/*import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BookingForm = () => {\r\n    const { tourId } = useParams(); // Get tourId from the URL\r\n    const history = useHistory(); // Hook for navigation\r\n\r\n    const [tour, setTour] = useState(null);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n    const [bookingDate, setBookingDate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8093/tours-api/tours/${tourId}`)\r\n            .then(response => setTour(response.data))\r\n            .catch(error => console.error(\"Error fetching tour details\", error));\r\n    }, [tourId]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Basic validations\r\n        if (numberOfPeople < 1) {\r\n            Swal.fire(\"Invalid Input\", \"Number of people must be at least 1!\", \"warning\");\r\n            return;\r\n        }\r\n        if (new Date(bookingDate) < new Date()) {\r\n            Swal.fire(\"Invalid Date\", \"Please select a future date!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        const booking = { tourId, fullName, email, numberOfPeople, bookingDate };\r\n\r\n        try {\r\n            const response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n            if (response.status === 200 || response.status === 201) {\r\n                Swal.fire(\"Booking Successful!\", \"Your booking has been confirmed!\", \"success\")\r\n                    .then(() => history.push(\"/\")); // Redirect to home page\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Booking Failed!\", \"Please try again later.\", \"error\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"booking-form\">\r\n            <h2>Book Your Tour</h2>\r\n            {tour ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Full Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Number of People</label>\r\n                        <input type=\"number\" className=\"form-control\" value={numberOfPeople} onChange={(e) => setNumberOfPeople(parseInt(e.target.value, 10) || 1)} min=\"1\" required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Booking Date</label>\r\n                        <input type=\"date\" className=\"form-control\" value={bookingDate} onChange={(e) => setBookingDate(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Confirm Booking</button>\r\n                </form>\r\n            ) : (\r\n                <p>Loading tour details...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingForm;*/}{/*import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst BookingForm = ({ tourId, tourTitle, price }) => {\r\n\tconst [fullName, setFullName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [numberOfPeople, setNumberOfPeople] = useState(1);\r\n\tconst [bookingDate, setBookingDate] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// Create booking object\r\n\t\tconst booking = {\r\n\t\t\ttourId,\r\n\t\t\ttourTitle,\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tnumberOfPeople,\r\n\t\t\tbookingDate\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// Send booking data to the backend\r\n\t\t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Booking Successful!',\r\n\t\t\t\t\ttext: 'Your booking has been confirmed!',\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Booking Failed!',\r\n\t\t\t\ttext: 'Please try again later.',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"booking-form\">\r\n\t\t\t<h2>Book Your Tour: {tourTitle}</h2>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Number of People</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={numberOfPeople}\r\n\t\t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Booking Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={bookingDate}\r\n\t\t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\tConfirm Booking\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BookingForm;*/}","map":{"version":3,"names":["React","useState","useEffect","Axios","Swal","useParams","useHistory","jsx","_jsx","jsxs","_jsxs","BookingForm","id","history","tour","setTour","fullName","setFullName","email","setEmail","numberOfPeople","setNumberOfPeople","bookingDate","setBookingDate","get","then","response","data","catch","error","fire","title","text","icon","confirmButtonText","handleSubmit","event","preventDefault","booking","tourId","tourTitle","post","status","push","children","className","onSubmit","type","value","onChange","e","target","required"],"sources":["D:/SpringProjects/TourPlanner/src/main/webapp/frontend/src/components/packages/BookingForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst BookingForm = () => {\r\n\tconst { id } = useParams(); // Get the tour ID from the URL\r\n\tconst history = useHistory();\r\n\tconst [tour, setTour] = useState(null);\r\n\tconst [fullName, setFullName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [numberOfPeople, setNumberOfPeople] = useState(1);\r\n\tconst [bookingDate, setBookingDate] = useState('');\r\n\r\n\t// Fetch tour data based on the ID\r\n\tuseEffect(() => {\r\n\t\tAxios.get(`http://localhost:8093/tours-api/tours/${id}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetTour(response.data); // Store tour data when it's fetched\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Error!',\r\n\t\t\t\t\ttext: 'Unable to fetch tour data.',\r\n\t\t\t\t\ticon: 'error',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, [id]); // Re-fetch when the ID changes\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// Create booking object\r\n\t\tconst booking = {\r\n\t\t\ttourId: id,\r\n\t\t\ttourTitle: tour.title,\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tnumberOfPeople,\r\n\t\t\tbookingDate\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// Send booking data to the backend\r\n\t\t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Booking Successful!',\r\n\t\t\t\t\ttext: 'Your booking has been confirmed!',\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\thistory.push('/'); // Redirect to the home page after successful booking\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Booking Failed!',\r\n\t\t\t\ttext: 'Please try again later.',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tif (!tour) {\r\n\t\treturn <div>Loading tour data...</div>; // Show loading while tour data is being fetched\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"booking-form\">\r\n\t\t\t<h2>Book Your Tour: {tour.title}</h2>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Number of People</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={numberOfPeople}\r\n\t\t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Booking Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={bookingDate}\r\n\t\t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\tConfirm Booking\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BookingForm;\r\n\r\n\r\n\r\n\r\n{/*import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BookingForm = () => {\r\n    const { tourId } = useParams(); // Get tourId from the URL\r\n    const history = useHistory(); // Hook for navigation\r\n\r\n    const [tour, setTour] = useState(null);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n    const [bookingDate, setBookingDate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8093/tours-api/tours/${tourId}`)\r\n            .then(response => setTour(response.data))\r\n            .catch(error => console.error(\"Error fetching tour details\", error));\r\n    }, [tourId]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Basic validations\r\n        if (numberOfPeople < 1) {\r\n            Swal.fire(\"Invalid Input\", \"Number of people must be at least 1!\", \"warning\");\r\n            return;\r\n        }\r\n        if (new Date(bookingDate) < new Date()) {\r\n            Swal.fire(\"Invalid Date\", \"Please select a future date!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        const booking = { tourId, fullName, email, numberOfPeople, bookingDate };\r\n\r\n        try {\r\n            const response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n            if (response.status === 200 || response.status === 201) {\r\n                Swal.fire(\"Booking Successful!\", \"Your booking has been confirmed!\", \"success\")\r\n                    .then(() => history.push(\"/\")); // Redirect to home page\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Booking Failed!\", \"Please try again later.\", \"error\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"booking-form\">\r\n            <h2>Book Your Tour</h2>\r\n            {tour ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Full Name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Number of People</label>\r\n                        <input type=\"number\" className=\"form-control\" value={numberOfPeople} onChange={(e) => setNumberOfPeople(parseInt(e.target.value, 10) || 1)} min=\"1\" required />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Booking Date</label>\r\n                        <input type=\"date\" className=\"form-control\" value={bookingDate} onChange={(e) => setBookingDate(e.target.value)} required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Confirm Booking</button>\r\n                </form>\r\n            ) : (\r\n                <p>Loading tour details...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingForm;*/}\r\n\r\n\r\n\r\n\r\n\r\n{/*import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst BookingForm = ({ tourId, tourTitle, price }) => {\r\n\tconst [fullName, setFullName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [numberOfPeople, setNumberOfPeople] = useState(1);\r\n\tconst [bookingDate, setBookingDate] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// Create booking object\r\n\t\tconst booking = {\r\n\t\t\ttourId,\r\n\t\t\ttourTitle,\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tnumberOfPeople,\r\n\t\t\tbookingDate\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// Send booking data to the backend\r\n\t\t\tconst response = await Axios.post(\"http://localhost:8093/bookings/create\", booking);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: 'Booking Successful!',\r\n\t\t\t\t\ttext: 'Your booking has been confirmed!',\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: 'Booking Failed!',\r\n\t\t\t\ttext: 'Please try again later.',\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\tconfirmButtonText: 'OK',\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"booking-form\">\r\n\t\t\t<h2>Book Your Tour: {tourTitle}</h2>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Number of People</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={numberOfPeople}\r\n\t\t\t\t\t\tonChange={(e) => setNumberOfPeople(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Booking Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={bookingDate}\r\n\t\t\t\t\t\tonChange={(e) => setBookingDate(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\tConfirm Booking\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BookingForm;*/}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}